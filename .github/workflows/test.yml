name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Run unit tests
        run: make test
        timeout-minutes: 5

      - name: Check code complexity
        run: ./scripts/check_complexity.sh
        continue-on-error: true

      - name: Verify client/server parity
        run: ./scripts/check_client_server_parity.sh

  integration-tests:
    name: Integration Tests (OmniFocus)
    runs-on: macos-latest
    # Integration tests are optional - they require OmniFocus setup
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Check if OmniFocus is available
        id: check-omnifocus
        run: |
          if osascript -e 'tell application "System Events" to exists application process "OmniFocus"' 2>/dev/null; then
            echo "available=true" >> $GITHUB_OUTPUT
          else
            echo "available=false" >> $GITHUB_OUTPUT
            echo "⚠️ OmniFocus not available - skipping integration tests"
          fi
        continue-on-error: true

      - name: Run integration tests
        if: steps.check-omnifocus.outputs.available == 'true'
        run: make test-integration
        timeout-minutes: 10
        continue-on-error: true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.unit-tests.result }}" != "success" ]; then
            echo "❌ Unit tests failed"
            exit 1
          fi
          echo "✅ All required tests passed"

          if [ "${{ needs.integration-tests.result }}" == "failure" ]; then
            echo "⚠️ Integration tests failed (non-blocking)"
          fi
